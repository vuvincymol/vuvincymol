pragma solidity >=0.6.12 <0.9.0;

contract voting {
  struct candidate{
    uint id;
    string name;
    uint votecount;
  }

  mapping(uint => candidate) public candidates;
  mapping(address => bool) public voters;

  uint public candidatescount;

  constructor() {
    addcandidate("vincy");
    addcandidate("mol");
  }
  function addcandidate(string memory _name)public {
    candidatescount++;
    candidates[candidatescount] = candidate(candidatescount,_name,0);
  }
  function vote(uint _candidateId) private {
    require(!voters[msg.sender]);
    require(_candidateId > 0 && _candidateId <= candidatescount);

    voters[msg.sender]=true;
    candidates[_candidateId].votecount++;
  }
  

}pragma solidity >=0.6.12 <0.9.0;

contract voting {
  struct candidate{
    uint id;
    string name;
    uint votecount;
  }

  mapping(uint => candidate) public candidates;
  mapping(address => bool) public voters;

  uint public candidatescount;

  constructor() {
    addcandidate("vincy");
    addcandidate("mol");
  }
  function addcandidate(string memory _name)public {
    candidatescount++;
    candidates[candidatescount] = candidate(candidatescount,_name,0);
  }
  function vote(uint _candidateId) private {
    require(!voters[msg.sender]);
    require(_candidateId > 0 && _candidateId <= candidatescount);

    voters[msg.sender]=true;
    candidates[_candidateId].votecount++;
  }
  

}
